<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Gully Cricket</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <link rel="stylesheet" href="../static/style/start.css">
</head>
<body>
    <div id="popup" class="popup">
        <form>
            <div class="mb-3">
                <label for="strikerpop" class="form-label">Choose Your Striker</label>
                <select name="strikerpop" id="strikerpop" class="form-select form-select-lg mb-3" aria-label="Large select example">
                    <option selected>Choose Striker</option>
                </select>
            </div>
            <div class="mb-3">
                <label for="nonStrikerpop" class="form-label">Choose Your Non-Striker</label>
                <select name="nonStrikerpop" id="nonStrikerpop" class="form-select form-select-lg mb-3" aria-label="Large select example">
                    <option selected>Choose Non-Striker</option>
                </select>
            </div>
            <button type="submit" id='striker-choose' class="btn btn-primary">Submit</button>
        </form>
    </div>
    <div id="Bowlerpopup" class="Bowlerpopup">
        <form>
            <div class="mb-3">
                <label for="Bowlerpop" class="form-label">Choose Your Bowler</label>
                <select name="Bowlerpop" id="Bowlerpop" class="form-select form-select-lg mb-3" aria-label="Large select example">
                    <option selected>Choose Bowler</option>
                </select>
            </div>
            <button type="submit" id='bowler-choose' class="btn btn-primary">Submit</button>
        </form>
    </div>
    <div id="no-ball-pop" class="no-ball-pop">
        <form>
            <div class="mb-3">
                <label for="nopop" class="form-label">No-Ball + </label>
                <input name="nopop" id="nopop" required>
            </div>
            <button type="submit" id='no-ball-extra' class="btn btn-primary">Submit</button>
        </form>
    </div>
    <div class="container">

        <div class="over">
            <h1 class="text-center">Match</h1>
            <div class="row">
                <div class="col">
                    <h2 class="mb-0">Batting Team: <span id="batting"></span></h2>
                    <h3 class="mb-3">Score: <span id="run"></span></h3>
                    <h3 class="mb-3">Wickets: <span id="wicket"></span></h3>
                    <h3>Overs: <span id="overs"></span></h3>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6 mb-3">
                    <h2 class="mb-0">Striker: <span id="striker"></span></h2>
                    <h2>Non-Striker: <span id="non-striker"></span></h2>
                    <div id="battingStats" style="display: flex; flex-direction: column;">
                        
                    </div>
                    <div id="bowlingstats">

                    </div>
                </div>
                <div class="col-md-6 mb-3">
                    <h2>Bowler: <span id="bowler"></span></h2>
                    <div class="d-flex flex-column gap-4">
                        <div class="d-flex align-items-center gap-3">
                            <div class="d-flex" id="every-ball"></div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col">
                    <button id="run1" class="btn btn-primary">Run 1</button>
                    <button id="run2" class="btn btn-primary">Run 2</button>
                    <button id="run3" class="btn btn-primary">Run 3</button>
                    <button id="run4" class="btn btn-primary">Run 4</button>
                    <button id="run6" class="btn btn-primary">Run 6</button>
                    <button id="wicketb" class="btn btn-danger">Wicket</button>
                    <button id="wide" class="btn btn-success">Wide</button>
                    <button id="no-ball" class="btn btn-success">No Ball</button>


                </div>
            </div>
            <div class="row">
                <div class="col">
                    <h3 class="mt-4">Ball-by-Ball Commentary:</h3>
                    <ul id="commentary" class="list-group"></ul>
                </div>
            </div>
        </div>
    </div>
    

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
script.
    document.addEventListener('DOMContentLoaded', (event) => {
        
        const battingStats = document.getElementById('battingStats');
        const bowlingStats = document.getElementById('bowlingStats');
        const batting = document.getElementById('batting');
        const run = document.getElementById('run');
        const wicket = document.getElementById('wicket');
        const oversdiv = document.getElementById('overs');
        const striker1 = document.getElementById('striker');
        const nonStriker = document.getElementById('non-striker');
        const bowler = document.getElementById('bowler');
        const commentary = document.getElementById('commentary');
        const strikerpop = document.getElementById('strikerpop');
        const nonStrikerpop = document.getElementById('nonStrikerpop');
        const bowlerpop = document.getElementById('Bowlerpop');
        const everyBall = document.getElementById('every-ball');
        const nopop = document.getElementById('nopop');
        var tossLossingBattingStats = {};
        var tossWinningBattingStats = {};
        
        var strikerName = !{JSON.stringify(striker)};
        var nonStrikerName = !{JSON.stringify(nonStriker)}
        var bowlerName = !{JSON.stringify(bowler)};
        var battingTeam = !{JSON.stringify(toss)};
        var team1 = !{JSON.stringify(team1)};
        var team2 = !{JSON.stringify(team2)};
        var totalOvers = !{overs}
        striker1.innerHTML = strikerName;
        nonStriker.innerHTML = nonStrikerName;
        bowler.innerHTML = bowlerName;
        batting.innerHTML = battingTeam;
        var numberOfPlayers = !{number};
        var playersName = !{JSON.stringify(players)};
        var commonPlayer = !{JSON.stringify(commonPlayer)};
        var team1Score = [];
        var team2Score = [];

        var score = 0;
        var wickets = 0;
        var balls = 0;
        var oversCount = 0;
        var totalOverCount = 0;
        var currentBowler = bowlerName;
        var currentStriker = strikerName;
        var currentNonStriker = nonStrikerName;
        var ballCommentary = '';
        var AllBowlers = [];
        var currentOver = [];
        AllBowlers.push(currentBowler); 


        for(let i = 0; i < numberOfPlayers; i++) {
            tossWinningBattingStats[playersName[i]] = [0, 0, 0, 0];
            tossLossingBattingStats[playersName[numberOfPlayers+i]] = [0, 0, 0, 0];
        }
        function updateInStatsDiv() {
            for(let i = 0; i < numberOfPlayers; i++) {
                if(totalOverCount >= totalOvers){
                    const playerSpan = document.createElement('span');
                    playerSpan.id = 'bat' + (i + 1);
                    playerSpan.textContent = playersName[numberOfPlayers+i] + ' ';
                    
                    const runSpan = document.createElement('span');
                    runSpan.id = 'runs' + (i + 1);
                    runSpan.textContent = '0';
                    
                    const ballSpan = document.createElement('span');
                    ballSpan.id = 'balls' + (i + 1);
                    ballSpan.textContent = '(0)';
                    
                    runSpan.appendChild(ballSpan);
                    playerSpan.appendChild(runSpan);
                    
                    battingStats.appendChild(playerSpan);
                    
                }
                else{
                    const playerSpan = document.createElement('span');
                    playerSpan.id = 'bat' + (i + 1);
                    playerSpan.textContent = playersName[i] + ' ';
                    
                    const runSpan = document.createElement('span');
                    runSpan.id = 'runs' + (i + 1);
                    runSpan.textContent = '0';
                    
                    const ballSpan = document.createElement('span');
                    ballSpan.id = 'balls' + (i + 1);
                    ballSpan.textContent = '(0)';
                    
                    runSpan.appendChild(ballSpan);
                    playerSpan.appendChild(runSpan);
                    
                    battingStats.appendChild(playerSpan);
                }
            }
            
        }
        updateInStatsDiv();

        function displayBattingStats() {
            if(totalOverCount >= totalOvers){
                
                for(let i = 0; i < numberOfPlayers; i++) {
                    const player = playersName[numberOfPlayers + i];
                    const runs = tossLossingBattingStats[player][0];
                    const balls = tossLossingBattingStats[player][1];
                    const fours = tossLossingBattingStats[player][2];
                    const sixes = tossLossingBattingStats[player][3];
                    const playerSpan = document.getElementById('bat' + (i + 1));
                    const runSpan = playerSpan.querySelector('span');
                    runSpan.textContent = `${runs} (${balls})`;
                }
            }
            else{
                for(let i = 0; i < numberOfPlayers; i++) {
                    const player = playersName[i];
                    const runs = tossWinningBattingStats[player][0];
                    const balls = tossWinningBattingStats[player][1];
                    const fours = tossWinningBattingStats[player][2];
                    const sixes = tossWinningBattingStats[player][3];
                    const playerSpan = document.getElementById('bat' + (i + 1));
                    const runSpan = playerSpan.querySelector('span');
                    runSpan.textContent = `${runs} (${balls})`;
                }
            }
        }

        function batsmanOptions(){
            for(let i = 0; i < numberOfPlayers; i++) {
                if(totalOverCount >= totalOvers){
                    let option = document.createElement('option');
                    option.value = playersName[numberOfPlayers + i];
                    option.text = playersName[numberOfPlayers + i];
                    strikerpop.appendChild(option);
                }
                else{
                    let option = document.createElement('option');
                    option.value = playersName[i];
                    option.text = playersName[i];
                    strikerpop.appendChild(option);
                }
            }
            for(let i = 0; i < numberOfPlayers; i++) {
                if(totalOverCount >= totalOvers){
                    let option = document.createElement('option');
                    option.value = playersName[numberOfPlayers + i];
                    option.text = playersName[numberOfPlayers + i];
                    nonStrikerpop.appendChild(option);
                }
                else{
                    let option = document.createElement('option');
                    option.value = playersName[i];
                    option.text = playersName[i];
                    nonStrikerpop.appendChild(option);
                }
            }
            if(commonPlayer){
                let commonStriker = document.createElement('option');
                commonStriker.value = commonPlayer;
                commonStriker.text = commonPlayer;
                strikerpop.appendChild(commonStriker);
                let commonNonStriker = document.createElement('option');
                commonNonStriker.value = commonPlayer;
                commonNonStriker.text = commonPlayer;
                nonStrikerpop.appendChild(commonNonStriker);
            }
        }
        //- for(let i = 0; i < numberOfPlayers; i++) {
        //-     let option = document.createElement('option');
        //-     option.value = playersName[i];
        //-     option.text = playersName[i];
        //-     strikerpop.appendChild(option);
        //- }
        //- for(let i = 0; i < numberOfPlayers; i++) {
        //-     let option = document.createElement('option');
        //-     option.value = playersName[i];
        //-     option.text = playersName[i];
        //-     nonStrikerpop.appendChild(option);
        //- }
        //- if(commonPlayer){
        //-     let commonStriker = document.createElement('option');
        //-     commonStriker.value = commonPlayer;
        //-     commonStriker.text = commonPlayer;
        //-     strikerpop.appendChild(commonStriker);
        //-     let commonNonStriker = document.createElement('option');
        //-     commonNonStriker.value = commonPlayer;
        //-     commonNonStriker.text = commonPlayer;
        //-     nonStrikerpop.appendChild(commonNonStriker);
        //- }
        batsmanOptions();
        function creatBowlers(){
            for(let i = 0; i < numberOfPlayers; i++) {
                if(totalOverCount >= totalOvers){
                    let option = document.createElement('option');
                    option.value = playersName[i];
                    option.text = playersName[i];
                    bowlerpop.appendChild(option);
                }
                else{
                    let option = document.createElement('option');
                    option.value = playersName[numberOfPlayers+i];
                    option.text = playersName[numberOfPlayers+i];
                    bowlerpop.appendChild(option);
                }
            }
            if(commonPlayer){
                let commonBowler = document.createElement('option');
                commonBowler.value = commonPlayer;
                commonBowler.text = commonPlayer;
                bowlerpop.appendChild(commonBowler);
            }
        }
        function showPopup() {
            const popup = document.getElementById('popup');
            popup.classList.add('show');
        }

        function hidePopup() {
            const popup = document.getElementById('popup');
            popup.classList.remove('show');
        }
        function showPopupB() {
            const popup = document.getElementById('Bowlerpopup');
            popup.classList.add('showBowlerpopup');
        }

        function hidePopupB() {
            const popup = document.getElementById('Bowlerpopup');
            popup.classList.remove('showBowlerpopup');
        }
        function shownoBall() {
            const popup = document.getElementById('no-ball-pop');
            popup.classList.add('show-no-ball');
        }

        function hidenoBall() {
            const popup = document.getElementById('no-ball-pop');
            popup.classList.remove('show-no-ball');
        }
        document.getElementById('striker-choose').addEventListener('click', (event) => {
            event.preventDefault();
            const selectedStriker = strikerpop.value;
            const selectedNonStriker = nonStrikerpop.value;
            striker1.innerHTML = selectedStriker;
            nonStriker.innerHTML = selectedNonStriker;
            currentStriker = selectedStriker;
            currentNonStriker = selectedNonStriker;
            hidePopup();
        });
        document.getElementById('bowler-choose').addEventListener('click', (event) => {
            event.preventDefault();
            var selectedBowler = Bowlerpop.value;
            bowler.innerHTML = selectedBowler;
            currentBowler = selectedBowler;
            AllBowlers.push(currentBowler); 
            hidePopupB();
        });
        document.getElementById('no-ball-extra').addEventListener('click', (event) => {
            event.preventDefault();
            var noballextra = parseInt(nopop.value);
            if(nopop.value === '' || isNaN(noballextra) || typeof noballextra !== 'number'){
                alert("Enter a valid number");
                return;
            }
            ExtraRuns(noballextra, 'no-ball');
            nopop.value = '';
            hidenoBall();
        });
        
        function updateScore(runScored) {
            balls++;
            let newSpan = document.createElement('span');
            newSpan.className = 'd-flex justify-content-center align-items-center rounded-circle bg-secondary text-white';
            newSpan.style.height = '2.5rem';
            newSpan.style.width = '2.5rem';
            newSpan.innerHTML = runScored;
            everyBall.appendChild(newSpan);
            currentOver.push(runScored);
            ballCommentary += `${balls}. ${runScored} run(s) scored by ${currentStriker}, Bowled by: ${currentBowler}<br>`;
            if(totalOverCount >= totalOvers){
                tossLossingBattingStats[currentStriker][0] += runScored;
                tossLossingBattingStats[currentStriker][1] += 1;
                if(runScored == 4){
                    tossLossingBattingStats[currentStriker][2] += 1;
                }
                if(runScored == 6){
                    tossLossingBattingStats[currentStriker][3] += 1;
                }
            }
            else{
                tossWinningBattingStats[currentStriker][0] += runScored;
                tossWinningBattingStats[currentStriker][1] += 1;
                if(runScored == 4){
                    tossWinningBattingStats[currentStriker][2] += 1;
                }
                if(runScored == 6){
                    tossWinningBattingStats[currentStriker][3] += 1;
                }
            }
            displayBattingStats();
            if (runScored % 2 !== 0) {
                let temp = currentStriker;
                currentStriker = currentNonStriker;
                currentNonStriker = temp;
                striker1.innerHTML = currentStriker;
                nonStriker.innerHTML = currentNonStriker;
            }
            if (balls % 6 === 0 && balls !== 0) {
                balls = 0;
                oversCount++;
                totalOverCount++;
                oversdiv.innerHTML = oversCount;
                ballCommentary += `<strong>End of Over of ${currentBowler}. Total Overs: ${oversCount}</strong><br>`;
                localStorage.setItem(currentBowler, JSON.stringify(currentOver));
                currentOver = [];
                currentBowler = '';
                //- updatePlayersOptions(numberOfPlayers);
                showPopupB();
                let temp = currentStriker;
                currentStriker = currentNonStriker;
                currentNonStriker = temp;
                striker1.innerHTML = currentStriker;
                nonStriker.innerHTML = currentNonStriker;
                while (everyBall.firstChild) {
                    everyBall.removeChild(everyBall.firstChild);
                }
                
            }
            score += runScored;
            run.innerHTML = score;
            wicket.innerHTML = wickets;
            displayCommentary();
            if (oversdiv.innerHTML == totalOvers) {
                while (battingStats.firstChild) {
                    battingStats.removeChild(battingStats.firstChild);
                }
                updateInStatsDiv();
                if(team1 == battingTeam){
                    battingTeam = team2;
                    team1Score[0] = team1;
                    team1Score[1] = score;
                    team1Score[2] = wickets;
                    team1Score[3] = balls;
                    team1Score[4] = oversCount;
                
                }
                else{
                    battingTeam = team1;
                    team2Score[0] = team2;
                    team2Score[1] = score;
                    team2Score[2] = wickets;
                    team2Score[3] = balls;
                    team2Score[4] = oversCount;
                }
                batting.innerHTML = battingTeam;
                score = 0;
                wickets = 0;
                balls = 0;
                oversCount = 0;
                oversdiv.innerHTML = oversCount;
                while (strikerpop.firstChild) {
                    strikerpop.removeChild(strikerpop.firstChild);
                }
                while (nonStrikerpop.firstChild) {
                    nonStrikerpop.removeChild(nonStrikerpop.firstChild);
                }
                //- for(let i = 0; i < numberOfPlayers; i++) {
                //-     let option = document.createElement('option');
                //-     option.value = playersName[numberOfPlayers+i];
                //-     option.text = playersName[numberOfPlayers+i];
                //-     strikerpop.appendChild(option);
                //- }
                //- for(let i = 0; i < numberOfPlayers; i++) {
                //-     let option = document.createElement('option');
                //-     option.value = playersName[numberOfPlayers+i];
                //-     option.text = playersName[numberOfPlayers+i];
                //-     nonStrikerpop.appendChild(option);
                //- }
                //- if(commonPlayer){
                //-     let commonStriker = document.createElement('option');
                //-     commonStriker.value = commonPlayer;
                //-     commonStriker.text = commonPlayer;
                //-     strikerpop.appendChild(commonStriker);
                //-     let commonNonStriker = document.createElement('option');
                //-     commonNonStriker.value = commonPlayer;
                //-     commonNonStriker.text = commonPlayer;
                //-     nonStrikerpop.appendChild(commonNonStriker);
                //- }
                batsmanOptions();
                if(totalOverCount == 2*totalOvers){
                    //- alert("Match Over");
                    console.log(team1Score);
                    console.log(team2Score);
                    localStorage.setItem('team1Score', JSON.stringify(team1Score));
                    localStorage.setItem('team2Score', JSON.stringify(team2Score));
                    localStorage.setItem('AllBowlers', JSON.stringify(AllBowlers));
                    localStorage.setItem('tossWinningBattingStats', JSON.stringify(tossWinningBattingStats));
                    localStorage.setItem('tossLossingBattingStats', JSON.stringify(tossLossingBattingStats));

                    window.location.href = '/over';
                }
                while (Bowlerpop.firstChild) {
                    Bowlerpop.removeChild(Bowlerpop.firstChild);
                }
                creatBowlers();
                showPopupB();
                showPopup();
                //- updatePlayersOptions(0);
            }
        }

        function wicketTaken() {
            balls++;
            wickets++;
            currentOver.push('W');
            let newSpan = document.createElement('span');
            newSpan.className = 'd-flex justify-content-center align-items-center rounded-circle bg-secondary text-white';
            newSpan.style.height = '2.5rem';
            newSpan.style.width = '2.5rem';
            newSpan.innerHTML = "W";
            everyBall.appendChild(newSpan);
            ballCommentary += `${balls}. Wicket taken, ${currentStriker} out by ${currentBowler}<br>`;
            currentStriker = '';
            if (balls % 6 === 0 && balls !== 0) {
                balls = 0;
                oversCount++;
                totalOverCount++;
                oversdiv.innerHTML = oversCount;
                localStorage.setItem(currentBowler, JSON.stringify(currentOver));
                currentOver = [];
                ballCommentary += `<strong>End of Over of ${currentBowler}. Total Overs: ${oversCount}</strong><br>`;
                currentBowler = '';
                //- updatePlayersOptions(numberOfPlayers);
                showPopupB();
                let temp = currentStriker;
                currentStriker = currentNonStriker;
                currentNonStriker = temp;
                striker1.innerHTML = currentStriker;
                nonStriker.innerHTML = currentNonStriker;
                
            }
            wicket.innerHTML = wickets;
            displayCommentary();
            showPopup();
        }

        function displayCommentary() {
            commentary.innerHTML = ballCommentary;
        }

        //- function updatePlayersOptions(z) {
        //-     let bowlerOptions = document.createElement('select');
        //-     bowlerOptions.id = 'selectBowler';
        //-     bowlerOptions.name = 'selectBowler';
            
        //-     let existingBowler = document.getElementById('bowler');
        //-     if (existingBowler) {
        //-         let bowlers = [];
        //-         for(let i = 0; i<numberOfPlayers; i++){
        //-             bowlers[i] =  playersName[z+i];
        //-         }
        //-         bowlers.forEach(player => {
        //-             let options= document.createElement('option');
        //-             options.value = player;
        //-             options.textContent = player;
        //-             bowlerOptions.appendChild(options);
        //-         });    
                
        //-         bowlerOptions.addEventListener('change', function() {
        //-             currentBowler = this.value;
        //-             bowler.innerHTML = currentBowler;
        //-         });
        //-         existingBowler.parentNode.replaceChild(bowlerOptions, existingBowler);
        //-     } else {
        //-         console.error('Elements with IDs "bowler" not found.');
        //-     }
        //- }

        function ExtraRuns(runScored, extraType) {
            let newSpan = document.createElement('span');
            newSpan.className = 'd-flex justify-content-center align-items-center rounded-circle bg-secondary text-white';
            newSpan.style.height = '2.75rem';
            newSpan.style.width = '2.75rem';
            if(extraType == 'wide'){
                newSpan.innerHTML = `${runScored}+WB`;
                currentOver.push(`${runScored}+WB`);
            }
            else{
                newSpan.innerHTML = `${runScored}+NB`;
                currentOver.push(`${runScored}+NB`);
            }
            everyBall.appendChild(newSpan);
            ballCommentary += `${balls}. ${runScored} run(s) due to ${extraType}, Bowled by: ${currentBowler}<br>`;
            score += runScored;
            run.innerHTML = score;
            wicket.innerHTML = wickets;
            displayCommentary();
        }

        document.getElementById('run1').addEventListener('click', function() { updateScore(1); });
        document.getElementById('run2').addEventListener('click', function() { updateScore(2); });
        document.getElementById('run3').addEventListener('click', function() { updateScore(3); });
        document.getElementById('run4').addEventListener('click', function() { updateScore(4); });
        document.getElementById('run6').addEventListener('click', function() { updateScore(6); });
        document.getElementById('wide').addEventListener('click', function() { ExtraRuns(1, 'wide'); });
        //- document.getElementById('no-ball').addEventListener('click', function() { ExtraRuns(1, 'no-ball');});
        document.getElementById('no-ball').addEventListener('click', function() { shownoBall();});
        document.getElementById('wicketb').addEventListener('click', function() { wicketTaken(); });

        run.innerHTML = score;
        wicket.innerHTML = wickets;
        oversdiv.innerHTML = oversCount;
        
        displayCommentary();
        hidePopup();
        hidePopupB();
        creatBowlers();
        hidenoBall();
    });
</body>
</html>
